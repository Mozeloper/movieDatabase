{"version":3,"sources":["components/images/reactMovie_logo.png","components/images/tmdb_logo.svg","components/styles/StyledHeader.js","components/elements/Header.js","config.js","components/styles/StyledHeroImage.js","components/elements/HeroImage.js","components/styles/StyledSearchBar.js","components/elements/SearchBar.js","components/styles/StyledGrid.js","components/elements/Grid.js","components/styles/StyledMovieThumb.js","components/elements/MovieThumb.js","components/styles/StyledLoadMoreBtn.js","components/elements/LoadMoreBtn.js","components/styles/StyledSpinner.js","components/elements/Spinner.js","components/Home.js","components/hooks/useHomeFetch.js","components/styles/StyledNavigation.js","components/elements/Navigation.js","components/styles/StyledMovieInfo.js","components/elements/MovieInfo.js","helpers.js","components/styles/StyledMovieInfoBar.js","components/elements/MovieInfoBar.js","components/styles/StyledActor.js","components/elements/Actors.js","components/Movie.js","components/hooks/useMovieFetch.js","components/NotFound.js","components/styles/GlobalStyle.js","components/App.js","index.js","components/images/no_image.jpg"],"names":["module","exports","StyledHeader","styled","div","StyledRMDBLogo","img","StyledTMDBLogo","Header","className","to","src","RMDBLogo","alt","TMDBLogo","API_URL","API_KEY","SEARCH_BASE_URL","POPULAR_BASE_URL","IMAGE_BASE_URL","StyledHeroImage","props","image","HeroImage","title","text","StyledSearchBar","StyledSearchBarContent","SearchBar","callback","useState","state","setState","timeOut","useRef","name","size","type","placeholder","onChange","event","value","target","clearTimeout","current","setTimeout","StyledGrid","StyledGridContent","Grid","header","children","StyledMovieThumb","MovieThumb","clickable","movieId","StyledLoadMoreBtn","button","LoadMoreBtn","onClick","StyledSpinner","Spinner","Home","searchBar","setSearchBar","movies","loading","setLoading","error","setError","fetchMovies","endpoint","a","isLoadMore","search","fetch","json","result","prev","results","heroImage","currentPage","page","totalPages","total_pages","console","log","useEffect","sessionStorage","homeState","JSON","parse","setItem","stringify","useHomeFetch","backdrop_path","original_title","overview","endPoint","map","movie","key","id","poster_path","Noimage","movieName","searchEndPoint","popularEndpoint","StyledNavigation","Navigation","StyledMovieInfo","backdrop","MovieInfo","NoImage","vote_average","directors","length","element","credit_id","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","StyledMovieInfoBar","MovieInfoBar","time","budget","revenue","hours","Math","floor","mins","calcTime","StyledActor","Actors","actor","profile_path","character","Movie","fetchData","useCallback","creditsEndpoint","creditsResult","crew","filter","member","job","actors","cast","localStorage","useMovieFetch","runtime","NotFound","GlobalStyle","createGlobalStyle","App","path","default","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.237a7c56.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/reactMovie_logo.08494abf.png\";","module.exports = __webpack_public_path__ + \"static/media/tmdb_logo.30cd724b.svg\";","import styled from 'styled-components';\n\nexport const StyledHeader = styled.div`\n  background: #1c1c1c;\n  padding: 0 20px;\n  box-sizing: border-box;\n\n  .header-content {\n    max-width: 1280px;\n    min-height: 120px;\n    padding: 20px 0px;\n    margin: 0 auto;\n    box-sizing: border-box;\n\n    @media screen and (max-width: 500px) {\n      max-width: 1280px;\n      min-height: 0px;\n    }\n  }\n`;\n\nexport const StyledRMDBLogo = styled.img`\n  width: 250px;\n  margin-top: 20px;\n\n  @media screen and (max-width: 500px) {\n    width: 150px;\n    margin-top: 5px;\n  }\n`;\n\nexport const StyledTMDBLogo = styled.img`\n  width: 122px;\n  margin-top: 25px;\n  float: right;\n\n  @media screen and (max-width: 500px) {\n    display: inline-block;\n    width: 80px;\n    margin-top: 0px;\n  }\n`;\n","import React from 'react';\r\n\r\nimport { Link } from '@reach/router'; \r\n\r\n\r\n// import styled from 'styled-components'; \r\n\r\nimport RMDBLogo from '../images/reactMovie_logo.png'; \r\nimport TMDBLogo from '../images/tmdb_logo.svg';\r\n\r\nimport { StyledHeader, StyledRMDBLogo, StyledTMDBLogo} from '../styles/StyledHeader';\r\n\r\n\r\n\r\n// const StyledHeader = styled.div`\r\n//     background: #1c1c1c;\r\n//     padding: 0 20px;\r\n//     box-sizing: border-box;\r\n\r\n\r\n//     .header-content {\r\n//         max-width: 1280px;\r\n//         min-height: 120px;\r\n//         padding: 20px 0;\r\n//         margin: 0 auto;\r\n//         box-sizing: border-box;\r\n\r\n//         @media screen and (max-width: 500px) {\r\n//             min-height: 0px;\r\n//         }\r\n//     }\r\n// `;\r\n\r\n// const StyledRMDBLogo = styled.img`\r\n//     width: 250px;\r\n//     margin-top: 20px;\r\n    \r\n//     @media screen and (max-width: 500px) {\r\n//         width: 150px;\r\n//         margin-top: 5px;\r\n//     }\r\n// `;\r\n\r\n// const StyledTMDBLogo = styled.img`\r\n//     width: 122px;\r\n//     margin-top: 25px;\r\n//     float: right;\r\n\r\n//     @media screen and (max-width: 500px) {\r\n//         display: inlin-block;\r\n//         width: 80px;\r\n//         margin-top: 0px;\r\n//     }\r\n// `;\r\n\r\nconst Header = () => (\r\n    <StyledHeader>\r\n        <div className=\"header-content\">\r\n            <Link to=\"/\" >\r\n            <StyledRMDBLogo src={RMDBLogo} alt=\"rmdb-logo\" />\r\n            </Link>\r\n            <StyledTMDBLogo src={TMDBLogo} alt=\"tmdb-logo\" />\r\n        </div>\r\n    </StyledHeader>\r\n)\r\nexport default Header;","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'b2d136a9615a3bc7621ed9be9da1ce3d';\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}`;\n\n\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500';\n\nexport { SEARCH_BASE_URL, POPULAR_BASE_URL, API_URL, API_KEY, IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE };\n","import styled from 'styled-components';\n\nexport const StyledHeroImage = styled.div`\n  background: ${props =>\n    `linear-gradient(\n      to bottom, rgba(0,0,0,0)\n      39%,rgba(0,0,0,0)\n      41%,rgba(0,0,0,0.5)\n      100%\n    ),\n    url('${props.image}'), #1c1c1c`};\n  background-size: 100%, cover !important;\n  background-position: center, center !important;\n  width: 100%;\n  height: 600px;\n  position: relative;\n  animation: animateHeroimage 1s;\n\n  .heroimage-content {\n    max-width: 1280px;\n    padding: 20px;\n    margin: 0 auto;\n  }\n\n  .heroimage-text {\n    z-index: 100;\n    max-width: 700px;\n    position: absolute;\n    bottom: 40px;\n    margin-right: 20px;\n    min-height: 100px;\n    background: rgba(0, 0, 0, 0);\n    color: #fff;\n\n    h1 {\n      font-family: 'Abel', sans-serif;\n      font-size: 48px;\n      color: #fff;\n\n      @media screen and (max-width: 720px) {\n        font-size: 38px;\n        color: #fff;\n      }\n    }\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 22px;\n      line-height: 26px;\n      color: #fff;\n\n      @media screen and (max-width: 720px) {\n        font-size: 16px;\n        line-height: 20px;\n        color: #fff;\n      }\n    }\n\n    @media screen and (max-width: 720px) {\n      max-width: 100%;\n    }\n  }\n\n  @keyframes animateHeroimage {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n","import React from 'react';\r\n\r\n\r\nimport { StyledHeroImage } from '../styles/StyledHeroImage';\r\n\r\n\r\nconst HeroImage = ({ image, title, text }) => (\r\n    <StyledHeroImage image={image}>\r\n        <div className=\"heroimage-content\">\r\n            <div className=\"heroimage-text\">\r\n            <h1>{title}</h1>\r\n            <p>{text}</p>\r\n            </div>\r\n        </div>\r\n    </StyledHeroImage>\r\n)\r\nexport default HeroImage;","import styled from 'styled-components';\n\nexport const StyledSearchBar = styled.div`\n  width: 100%;\n  height: 105px;\n  background: #1c1c1c;\n  padding: 25px 20px 0px 20px;\n  box-sizing: border-box;\n  color: #fff;\n`;\n\nexport const StyledSearchBarContent = styled.div`\n  max-width: 1280px;\n  width: 100%;\n  height: 55px;\n  background: #353535;\n  margin: 0 auto;\n  border-radius: 40px;\n  position: relative;\n  color: #fff;\n\n  .fa-search {\n    position: absolute;\n    left: 20px;\n    top: 12px;\n    color: #fff;\n    z-index: 1000;\n  }\n\n  input {\n    font-family: 'Abel', sans-serif;\n    font-size: 28px;\n    position: absolute;\n    left: 0px;\n    margin: 8px 0;\n    padding: 0 0 0 60px;\n    border: 0;\n    width: 95%;\n    background: transparent;\n    height: 40px;\n    color: #fff;\n    box-sizing: border-box;\n\n    :focus {\n      outline: none;\n    }\n\n    @media screen and (max-width: 720px) {\n      font-size: 28px;\n    }\n  }\n`;\n","import React, { useState, useRef } from 'react';\r\n\r\nimport FontAwesome from 'react-fontawesome';\r\n\r\nimport { StyledSearchBar, StyledSearchBarContent } from '../styles/StyledSearchBar';\r\n\r\nconst SearchBar = ({ callback }) => {\r\n\r\n    const  [ state, setState ] = useState('');\r\n    const timeOut = useRef(null);\r\n\r\n    const doSearch = event => {\r\n        // console.log(event.target.value);\r\n        const { value } = event.target;\r\n\r\n        clearTimeout(timeOut.current);\r\n        setState(value);\r\n\r\n        timeOut.current = setTimeout(() => {\r\n            callback(value);\r\n        }, 500);\r\n    }\r\n\r\n    return(\r\n        <StyledSearchBar>\r\n            <StyledSearchBarContent>\r\n                <FontAwesome className=\"fa-search\" name=\"search\" size=\"2x\" />\r\n                <input type =\"text\" placeholder =\"Search Movie\" onChange={doSearch} value={state} />\r\n            </StyledSearchBarContent>\r\n        </StyledSearchBar>\r\n    );\r\n}\r\n\r\n\r\nexport default SearchBar;","import styled from 'styled-components';\n\nexport const StyledGrid = styled.div`\n  max-width: 1280px;\n  margin: 0 auto;\n  padding: 0 20px;\n  h1 {\n    font-family: 'Abel', sans-serif;\n    font-size: 42px;\n\n    @media screen and (max-width: 768px) {\n      font-size: 22px;\n    }\n  }\n`;\n\nexport const StyledGridContent = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, minmax(10rem, 1fr));\n  grid-gap: 4rem;\n  position: relative;\n\n  .grid-element {\n    animation: animateGrid 0.5s;\n  }\n\n  @keyframes animateGrid {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n\n  @media screen and (max-width: 1024px) {\n    grid-template-columns: repeat(4, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 768px) {\n    grid-template-columns: repeat(3, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 600px) {\n    grid-template-columns: repeat(2, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 375px) {\n    grid-template-columns: repeat(1, 1fr);\n  }\n`;\n","import React from 'react';\r\n\r\nimport { StyledGrid, StyledGridContent } from '../styles/StyledGrid';\r\n\r\n\r\nconst Grid = ({ header, children }) => (\r\n    <StyledGrid>\r\n        <h1>{header}</h1>\r\n        <StyledGridContent>\r\n            {children}\r\n        </StyledGridContent>\r\n    </StyledGrid>\r\n);\r\nexport default Grid;","import styled from 'styled-components';\n\nexport const StyledMovieThumb = styled.div`\n  img {\n    width: 100%;\n    height: auto;\n    /* max-height: 350px; */\n    transition: all 0.3s;\n    object-fit: cover;\n    border-radius: 20px;\n\n    :hover {\n      opacity: 0.8;\n    }\n\n    /* @media screen and (max-width: 1024px) {\n      height: 300px;\n    }\n\n    @media screen and (max-width: 768px) {\n      height: 350px;\n    }\n\n    @media screen and (max-width: 600px) {\n      max-height: 300px;\n    }\n\n    @media screen and (max-width: 375px) {\n      max-height: 450px;\n    } */\n\n    .clickable {\n      cursor: pointer;\n    }\n  }\n`;\n","import React from 'react';\r\n\r\nimport { Link } from '@reach/router';\r\n\r\nimport { StyledMovieThumb } from '../styles/StyledMovieThumb';\r\n\r\n\r\nconst MovieThumb = (props) => (\r\n    <StyledMovieThumb>\r\n        {\r\n            props.clickable ? (\r\n                <Link to={`/${props.movieId}`}>\r\n                     <img className=\"clickable\" src={props.image} alt=\"moviethumb\" />\r\n                </Link>\r\n            ) : (\r\n                <img src={props.image} alt=\"moviethumb\" />\r\n            )}\r\n    </StyledMovieThumb>\r\n)\r\n\r\n\r\nexport default MovieThumb;","import styled from 'styled-components';\n\nexport const StyledLoadMoreBtn = styled.button`\n  background: #000;\n  width: 25%;\n  min-width: 200px;\n  height: 70px;\n  color: #fff;\n  cursor: pointer;\n  transition: all 0.3s;\n  border-radius: 40px;\n  font-family: 'Abel', sans-serif;\n  font-size: 28px;\n  max-width: 1280px;\n  display: block;\n  margin: 20px auto;\n  padding: 0 20px;\n  outline: none;\n\n  :hover {\n    opacity: 0.8;\n  }\n`;\n","import React from 'react';\r\n\r\nimport { StyledLoadMoreBtn } from '../styles/StyledLoadMoreBtn';\r\n\r\nconst LoadMoreBtn = ({ text, callback }) =>( \r\n    <StyledLoadMoreBtn type= \"button\" onClick= {callback} >\r\n        {text}\r\n    </StyledLoadMoreBtn>\r\n)\r\n\r\n\r\nexport default LoadMoreBtn;","import styled from 'styled-components';\n\nexport const StyledSpinner = styled.div`\n  border: 5px solid #f3f3f3; /* Light grey */\n  border-top: 5px solid #16d47b; /* Blue */\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  animation: spin 0.8s linear infinite;\n  margin: 20px auto;\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","import React from 'react';\r\n\r\nimport { StyledSpinner } from '../styles/StyledSpinner';\r\n\r\nconst Spinner = () => <StyledSpinner />\r\n\r\n\r\n\r\nexport default Spinner;","import React, { useState } from 'react';\r\n\r\nimport { \r\n    \r\n    SEARCH_BASE_URL,\r\n    POPULAR_BASE_URL, \r\n    IMAGE_BASE_URL, \r\n    BACKDROP_SIZE, \r\n    POSTER_SIZE\r\n} from '../config';\r\n\r\n\r\n/// IMPORT COMPONENTS \r\n\r\nimport HeroImage from './elements/HeroImage';\r\nimport SearchBar from './elements/SearchBar';\r\nimport Grid from './elements/Grid';\r\nimport MovieThumb from './elements/MovieThumb';\r\nimport LoadMoreBtn from './elements/LoadMoreBtn';\r\nimport Spinner from './elements/Spinner';\r\n\r\nimport { useHomeFetch } from './hooks/useHomeFetch';\r\n\r\nimport Noimage from './images/no_image.jpg';\r\n\r\nconst Home = () => {\r\n    const [ searchBar, setSearchBar] = useState('');\r\n   const [ {\r\n        state: {movies, currentPage, totalPages, heroImage},\r\n         loading, \r\n         error\r\n        }, \r\n        fetchMovies] = useHomeFetch(searchBar);\r\n   \r\n\r\n   const searchMovies = search => {\r\n       const endPoint = search ? SEARCH_BASE_URL + search : POPULAR_BASE_URL;\r\n\r\n       setSearchBar(search);\r\n       fetchMovies(endPoint);\r\n   }\r\n   \r\n\r\n   const loadMoreMovies = () => {\r\n       const searchEndPoint = `${SEARCH_BASE_URL}${searchBar}&page=${currentPage + 1}`;\r\n       const popularEndpoint = `${POPULAR_BASE_URL}&page=${currentPage + 1}`;\r\n\r\n       const endPoint = searchBar ? searchEndPoint : popularEndpoint;\r\n\r\n       fetchMovies(endPoint);\r\n   }\r\n\r\n   if (error) return <div>Something Went Wrong....</div>;\r\n   if (!movies[0]) return <Spinner />\r\n    return(\r\n        <>\r\n        { !searchBar && (\r\n            <HeroImage \r\n                image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`}\r\n                title={heroImage.original_title}\r\n        text={heroImage.overview}/> )}\r\n            <SearchBar callback= {searchMovies} />\r\n            <Grid header = {searchBar ? 'Search Result' : 'popular Movies'}>\r\n                {movies.map(movie => (\r\n                    <MovieThumb\r\n                        key={movie.id}\r\n                        clickable\r\n                        image={movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}` : Noimage}\r\n                        movieId={movie.id}\r\n                        movieName={movie.original_title}/>\r\n                    ))\r\n                }\r\n            </Grid>\r\n            {loading ? <Spinner />: null }\r\n            {currentPage < totalPages && !loading && (\r\n                <LoadMoreBtn text = \"Load More Movies\" callback={loadMoreMovies}/>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n  \r\n  export default Home;","import { useState, useEffect } from 'react';\r\n\r\nimport {  POPULAR_BASE_URL } from '../../config';\r\n\r\n// SEARCH_BASE_URL,\r\n\r\nexport const useHomeFetch = (searchBar) => {\r\n    const [state, setState] = useState({ movies: [] });\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(false);\r\n\r\n    const fetchMovies = async endpoint => {\r\n        setError(false);\r\n        setLoading(true);\r\n\r\n        const isLoadMore = endpoint.search('page');\r\n\r\n        try {\r\n            const result = await (await fetch(endpoint)).json();\r\n            setState(prev =>({\r\n                ...prev,\r\n                movies: \r\n                    isLoadMore !== -1\r\n                ? [...prev.movies, ...result.results]\r\n                : [...result.results],\r\n                heroImage: prev.heroImage || result.results[0],\r\n                currentPage: result.page,\r\n                totalPages: result.total_pages\r\n            }))\r\n\r\n        } catch (error) {\r\n            setError(true);\r\n            console.log(error);\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(sessionStorage.homeState) {\r\n            setState(JSON.parse(sessionStorage.homeState));\r\n            setLoading(false);\r\n        } else {\r\n            fetchMovies(POPULAR_BASE_URL);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if(!searchBar) {\r\n            // console.log('Writing to the session Storage')\r\n            sessionStorage.setItem('homeState', JSON.stringify(state))\r\n        }\r\n    }, [searchBar, state]);\r\n\r\n    return [{ state, loading , error}, fetchMovies];\r\n}","import styled from 'styled-components';\n\nexport const StyledNavigation = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 70px;\n  background: #353535;\n  color: #fff;\n\n  .navigation-content {\n    max-width: 1280px;\n    margin: 0 auto;\n    padding: 0 20px;\n    width: 100%;\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 22px;\n      float: left;\n      color: #fff;\n      padding-right: 10px;\n      text-decoration: none;\n\n      @media screen and (max-width: 768px) {\n        font-size: 16px;\n      }\n    }\n  }\n`;\n","import React from 'react';\r\nimport { Link } from '@reach/router';\r\n\r\nimport { StyledNavigation } from '../styles/StyledNavigation';\r\n\r\nconst Navigation = ({ movie }) => (\r\n  <StyledNavigation>\r\n    <div className=\"navigation-content\">\r\n      <Link to=\"/\">\r\n        <p>Home</p>\r\n      </Link>\r\n      <p>|</p>\r\n      <p>{movie}</p>\r\n    </div>\r\n  </StyledNavigation>\r\n);\r\n\r\nexport default Navigation;\r\n","import styled from 'styled-components';\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from '../../config';\n\nexport const StyledMovieInfo = styled.div`\n  background: ${props =>\n    props.backdrop\n      ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.backdrop}')`\n      : '#000'};\n  background-size: cover !important;\n  background-position: center !important;\n  width: 100%;\n  padding: 40px 20px;\n  box-sizing: border-box;\n  animation: animateMovieinfo 1s;\n\n  .movieinfo-content {\n    max-width: 1280px;\n    min-height: 450px;\n    margin: 0 auto;\n    background: rgb(0, 0, 0, 0.7);\n    border-radius: 20px;\n    position: relative;\n  }\n\n  .movieinfo-thumb {\n    width: 300px;\n    float: left;\n\n    @media screen and (max-width: 768px) {\n      width: 100% !important;\n    }\n  }\n\n  .movieinfo-text {\n    font-family: Arial, Helvetica, sans-serif;\n    padding: 40px;\n    color: #fff;\n    overflow: hidden;\n\n    h1 {\n      font-family: 'Abel', sans-serif;\n      font-size: 48px;\n      margin: 0;\n\n      @media screen and (max-width: 1000px) {\n        font-size: 32px !important;\n      }\n    }\n\n    h3 {\n      font-size: 16px;\n      line-height: 0;\n      margin-top: 30px;\n    }\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 18px;\n      line-height: 26px;\n    }\n  }\n\n  .rating-director {\n    display: flex;\n    justify-content: flex-start;\n  }\n\n  .score {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 35px;\n    height: 35px;\n    background: #fff;\n    color: #000;\n    font-weight: 800;\n    border-radius: 25px;\n    margin: 0px 0 0 0;\n  }\n\n  .director {\n    margin: 0 0 0 40px;\n\n    p {\n      margin: 0;\n    }\n  }\n\n  @media screen and (max-width: 768px) {\n    min-height: 600px;\n    height: auto;\n  }\n\n  @keyframes animateMovieinfo {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n","\r\nimport React from 'react';\r\n\r\nimport NoImage from '../images/no_image.jpg';\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config';\r\n\r\nimport MovieThumb from './MovieThumb';\r\n\r\nimport { StyledMovieInfo } from '../styles/StyledMovieInfo';\r\n\r\n\r\nconst MovieInfo = ({ movie }) => (\r\n  <StyledMovieInfo backdrop={movie.backdrop_path}>\r\n    <div className=\"movieinfo-content\">\r\n      <div className=\"movieinfo-thumb\">\r\n        <MovieThumb\r\n          image={\r\n            movie.poster_path\r\n              ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n              : NoImage\r\n          }\r\n          clickable={false}\r\n        />\r\n      </div>\r\n      <div className=\"movieinfo-text\">\r\n        <h1>{movie.title}</h1>\r\n        <h3>PLOT</h3>\r\n        <p>{movie.overview}</p>\r\n     \r\n        <div className=\"rating-director\">\r\n          <div>\r\n            <h3>IMDB RATING</h3>\r\n            <div className=\"score\">{movie.vote_average}</div>\r\n          </div>\r\n          <div className=\"director\">\r\n            <h3>DIRECTOR{movie.directors.length > 1 ? 'S' : ''}</h3>\r\n            {movie.directors.map(element => (\r\n              <p key={element.credit_id}>{element.name}</p>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </StyledMovieInfo>\r\n);\r\n\r\nexport default MovieInfo;","// Convert time to hours and minutes\nexport const calcTime = time => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n// Convert a number to money formatting\nexport const convertMoney = money => {\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n};\n","import styled from 'styled-components';\n\nexport const StyledMovieInfoBar = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  min-height: 100px;\n  height: auto;\n  background: #1c1c1c;\n  padding: 20px;\n  box-sizing: border-box;\n  font-family: 'Abel', sans-serif;\n  font-size: 20px;\n\n  .movieinfobar-content {\n    max-width: 1280px;\n    width: 100%;\n    margin: 0 auto;\n    color: #fff;\n  }\n\n  .movieinfobar-content-col {\n    float: left;\n    width: 33.33%;\n    box-sizing: border-box;\n    padding: 10px 20px 0 0;\n  }\n\n  .movieinfobar-info {\n    padding: 5px 0 0 10px;\n    float: left;\n  }\n\n  .fa-time,\n  .fa-revenue {\n    float: left;\n    margin-top: -4px;\n  }\n\n  .fa-budget {\n    float: left;\n    margin-top: -3px;\n  }\n\n  @media screen and (max-width: 768px) {\n    .fa-time,\n    .fa-revenue,\n    .fa-budget {\n      display: none;\n    }\n  }\n\n  @media screen and (max-width: 425px) {\n    font-size: 14px;\n  }\n`;\n","\r\n\r\n\r\nimport React from 'react';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport PropTypes from 'prop-types';\r\nimport { calcTime, convertMoney } from '../../helpers';\r\n\r\nimport { StyledMovieInfoBar } from '../styles/StyledMovieInfoBar';\r\n\r\nconst MovieInfoBar = ({ time, budget, revenue }) => (\r\n  <StyledMovieInfoBar>\r\n    <div className=\"movieinfobar-content\">\r\n      <div className=\"movieinfobar-content-col\">\r\n        <FontAwesome className=\"fa-time\" name=\"clock-o\" size=\"2x\" />\r\n        <span className=\"movieinfobar-info\">\r\n          Running time: {calcTime(time)}\r\n        </span>\r\n      </div>\r\n\r\n      <div className=\"movieinfobar-content-col\">\r\n        <FontAwesome className=\"fa-budget\" name=\"money\" size=\"2x\" />\r\n        <span className=\"movieinfobar-info\">\r\n          Budget: {convertMoney(budget)}\r\n        </span>\r\n      </div>\r\n\r\n      <div className=\"movieinfobar-content-col\">\r\n        <FontAwesome className=\"fa-revenue\" name=\"ticket\" size=\"2x\" />\r\n        <span className=\"movieinfobar-info\">\r\n          Revenue: {convertMoney(revenue)}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </StyledMovieInfoBar>\r\n);\r\n\r\nMovieInfoBar.propTypes = {\r\n  time: PropTypes.number,\r\n  budget: PropTypes.number,\r\n  revenue: PropTypes.number,\r\n}\r\n\r\nexport default MovieInfoBar;\r\n","import styled from 'styled-components';\n\nexport const StyledActor = styled.div`\n  font-family: 'Abel', sans-serif;\n  color: #fff;\n  background: #1c1c1c;\n  border-radius: 20px;\n  padding: 5px;\n  text-align: center;\n\n  img {\n    display: block;\n    width: 100%;\n    height: 200px;\n    object-fit: cover;\n    border-radius: 15px;\n  }\n\n  .actor-name {\n    display: block;\n    font-size: 18px;\n    margin: 10px 0 0 0;\n  }\n\n  .actor-character {\n    display: block;\n    font-size: 16px;\n    margin: 0 0 10px 0;\n  }\n`;\n","\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport NoImage from '../images/no_image.jpg';\r\n\r\nimport { IMAGE_BASE_URL, POSTER_SIZE} from '../../config';\r\nimport { StyledActor } from '../styles/StyledActor';\r\n\r\nconst Actors = ({ actor }) => (\r\n  <StyledActor>\r\n    <img \r\n      src={\r\n        actor.profile_path\r\n          ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\r\n          : NoImage\r\n      }\r\n      alt=\"actorthumb\"\r\n    />\r\n    <span className=\"actor-name\">{actor.name}</span>\r\n    <span className=\"actor-character\">{actor.character}</span>\r\n  </StyledActor>\r\n);\r\n\r\nActors.propTypes = {\r\n  actor: PropTypes.object,\r\n}\r\n\r\nexport default Actors;\r\n","import React, { Fragment } from 'react';\r\n\r\n\r\n/// Components\r\n\r\n\r\nimport Navigation from './elements/Navigation';\r\n\r\nimport MovieInfo from './elements/MovieInfo';\r\n\r\nimport MovieInfoBar from './elements/MovieInfoBar';\r\n\r\nimport Actors from './elements/Actors';\r\n\r\nimport Grid from './elements/Grid';\r\n\r\nimport Spinner from './elements/Spinner';\r\n\r\nimport { useMovieFetch } from './hooks/useMovieFetch';\r\n\r\nconst Movie = ( { movieId }) => {\r\n    const [ state, loading, error ] = useMovieFetch(movieId);\r\n    console.log(state);\r\n\r\n    if (error) return <div> Something went wrong</div>;\r\n    if (loading) return <Spinner />;\r\n    return(\r\n        <Fragment>\r\n            <Navigation movie={state.original_title}/>\r\n            <MovieInfo movie={state}/>\r\n            <MovieInfoBar \r\n                time={state.runtime}\r\n                budget={state.budget} \r\n                revenue={state.revenue} />\r\n            <Grid header=\"Actors\">\r\n                {state.actors.map(actor => (\r\n                <Actors key={actor.credit_id} actor={actor} />\r\n            ))}     \r\n            </Grid>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default Movie;\r\n\r\n","import { useState, useEffect, useCallback } from 'react';\r\n\r\nimport { API_URL, API_KEY } from '../../config';\r\n\r\n\r\n\r\nexport const useMovieFetch = (movieId) => {\r\n    const [state, setState ] = useState({});\r\n    const [ loading, setLoading ] = useState(true);\r\n    const [error, setError] = useState(false);\r\n\r\n\r\n    const fetchData = useCallback(async () => {\r\n        setError(false);\r\n        setLoading(true);\r\n\r\n        try{\r\n            const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\r\n            const result = await (await fetch(endpoint)).json();\r\n      \r\n            const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\r\n            const creditsResult = await (await fetch(creditsEndpoint)).json();\r\n            const directors = creditsResult.crew.filter(\r\n              member => member.job === 'Director'\r\n                );\r\n\r\n                setState({\r\n                    ...result,\r\n                    actors: creditsResult.cast,\r\n                    directors\r\n                })\r\n\r\n        } catch(error) {\r\n            setError(true);\r\n        }\r\n        setLoading(false);\r\n    }, [movieId])\r\n\r\n    useEffect(() => {\r\n        if(localStorage[movieId]) {\r\n            setState(JSON.parse(localStorage[movieId]));\r\n            setLoading(false);\r\n        } else {\r\n            fetchData();\r\n        }\r\n    }, [fetchData, movieId])\r\n\r\n    useEffect(()=> {\r\n        localStorage.setItem(movieId, JSON.stringify(state));\r\n    }, [movieId, state])\r\n\r\n    return [state, loading, error];\r\n\r\n}\r\n","import React from 'react';\r\n\r\nconst NotFound = () => <div>OOPS..... NOTHING FOUND HERE...</div> \r\n\r\nexport default NotFound;","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n`;\n","import React from 'react';\n\nimport { Router } from '@reach/router'; \n\nimport Header from './elements/Header';\n\nimport Home from './Home';\n\nimport Movie from './Movie';\n\nimport NotFound from './NotFound';\n\nimport { GlobalStyle } from './styles/GlobalStyle';\n\nconst App = () => (\n\n<>\n    <Header />\n    <Router>\n\n    <Home path=\"/\" />\n    <Movie path=\"/:movieId\" />\n    <NotFound default />\n\n\n    </Router>\n    <GlobalStyle />\n</>\n)\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/no_image.31f5bb1d.jpg\";"],"sourceRoot":""}